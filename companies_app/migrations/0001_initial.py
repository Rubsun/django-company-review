# Generated by Django 5.0.4 on 2024-05-05 15:24

import companies_app.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(verbose_name='title')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': '"companies_schema"."category"',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(verbose_name='title')),
                ('phone', models.TextField(validators=[companies_app.models.check_valid_phone], verbose_name='phone')),
                ('address', models.TextField(verbose_name='address')),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
                'db_table': '"companies_schema"."company"',
                'ordering': ['title', 'phone', 'address'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_modified], verbose_name='modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'client',
                'db_table': '"companies_schema"."client"',
            },
        ),
        migrations.CreateModel(
            name='CompanyEquipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies_app.company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'relation Company Equipment',
                'verbose_name_plural': 'relation Company Equipment',
                'db_table': '"companies_schema"."company_equipment"',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(verbose_name='title')),
                ('size', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='size')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='companies_app.category', verbose_name='category')),
                ('companies', models.ManyToManyField(through='companies_app.CompanyEquipment', to='companies_app.company', verbose_name='companies')),
            ],
            options={
                'verbose_name': 'equipment',
                'verbose_name_plural': 'equipment',
                'db_table': '"companies_schema"."equipment"',
                'ordering': ['title', 'size'],
            },
        ),
        migrations.AddField(
            model_name='companyequipment',
            name='equipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies_app.equipment', verbose_name='equipment'),
        ),
        migrations.AddField(
            model_name='company',
            name='equipments',
            field=models.ManyToManyField(through='companies_app.CompanyEquipment', to='companies_app.equipment', verbose_name='equipments'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=companies_app.models.get_datetime, null=True, validators=[companies_app.models.check_modified], verbose_name='modified')),
                ('text', models.TextField(verbose_name='text')),
                ('rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='grade')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies_app.client')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies_app.equipment')),
            ],
            options={
                'verbose_name': 'reviews',
                'verbose_name_plural': 'reviews',
                'db_table': '"companies_schema"."review"',
                'ordering': ['text', 'rating'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='companyequipment',
            unique_together={('company', 'equipment')},
        ),
    ]
